@model Library.Application.Queries.PaginationInfo
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="row col-lg-12">

    @if (Model.PageIndex > 1)
    {
        <a asp-action="Index" asp-route-page="@(Model.PageIndex-1)" class="btn btn-default @prevDisabled">Previous</a>
        <a asp-action="Index" asp-route-page="1" class="btn btn-default">1</a>
    }
    @if (Model.TotalPages >= 2)
    {
        if (Model.PageIndex - 5 > 1)
        {
            @for (int i = Model.PageIndex - 5, j = 0; i < Model.PageIndex && j < 5 && i >= 1; i++, j++)
            {
                <a asp-action="Index" asp-route-page="@i" class="btn btn-default">@i</a>
            }
        }
        else
        {
            for (int i = 2; i < Model.PageIndex; i++)
            {
                <a asp-action="Index" asp-route-page="@i" class="btn btn-default">@i</a>
            }
        }
        
        <a asp-action="Index" asp-route-page="" class="btn btn-default disabled">@Model.PageIndex</a>

        @for (int i = Model.PageIndex + 1, j = 0; i < Model.TotalPages && j < 5; i++, j++)
        {
            <a asp-action="Index" asp-route-page="@i" class="btn btn-default">@i</a>
        }
    }
    @if (Model.PageIndex < Model.TotalPages)
    {
        <a asp-action="Index" asp-route-page="@(Model.TotalPages)" class="btn btn-default">@(Model.TotalPages)</a>
        <a asp-action="Index" asp-route-page="@(Model.PageIndex+1)" class="btn btn-default @nextDisabled">Next</a>
    }
    
</div>
@* PRZYKŁAD DLA PAGINACJI I FILTRóW JAKBY TO WYGLĄDAŁO-MOŻNA BĘDZIE ZMIENIC @VIEWDATA TYLKO NA COŚ INNEGO *@
@* <a asp-action="Index"
       asp-route-page="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a> *@